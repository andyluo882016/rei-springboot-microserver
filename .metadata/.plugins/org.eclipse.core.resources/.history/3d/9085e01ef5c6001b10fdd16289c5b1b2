package com.example.demo.service;

import java.util.Arrays;
import java.util.List;
import java.util.stream.Collectors;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpEntity;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpMethod;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Service;
import org.springframework.web.client.RestTemplate;

import com.example.demo.module.Cart;
import com.example.demo.module.Item;
import com.example.demo.module.Product;

@Service
public class PurchaseService {

	@Autowired
	RestTemplate restTemplate;
	
	public Cart addProduct(String itemId, String productId, String lname, Integer total) {
		Cart cart =new Cart();
		Integer udNumber=0;
		String _url1="http://producet-inventory-server/inventory/getitems/"+productId;
		String _url2="http://producet-supplier-server/product/"+productId;
		String _url3="http://producet-inventory-server/inventory/update";
		HttpHeaders headers = new HttpHeaders();
	    headers.setAccept(Arrays.asList(MediaType.APPLICATION_JSON));
	   
	    headers.set("REI-COM-PERSIST", "true");
	    headers.set("REI-COM-LOCATION", "USA");
	    headers.add("cart", "purchase-products");
	    HttpEntity<Item[]> entity = new HttpEntity<Item[]>(headers);
	    
	    HttpEntity<Product> prentity = new HttpEntity<Product>(headers);
		   
	    ResponseEntity<Product> Proresponse =  restTemplate.exchange(_url2, HttpMethod.GET, prentity, Product.class);
	    
	    System.out.println("\n --> "+Proresponse.getStatusCode());
	    Product myproduct=Proresponse.getBody();
	   if(myproduct !=null) {
	    
	    ResponseEntity<Item[]> itemlists = restTemplate.exchange(_url1, HttpMethod.GET, entity, Item[].class);
		
		 List<Item> ilist=Arrays.asList(itemlists.getBody()).stream()
		 .filter(tms -> (tms.getLocation().getName()).equalsIgnoreCase(lname))
		 .collect(Collectors.toList());
		 
		 if(!ilist.isEmpty()) {
			 cart.insertProduct(myproduct, total);
			 
		 }
		 else {
			 cart.insertProduct(new Product(), 0);
		 }
	   
	      cart.insertProduct(null, 0);
	   }
		 
		 return cart; 
		 
	}
}
