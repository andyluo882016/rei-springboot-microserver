package com.example.demo.controller;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import java.util.*;

import com.example.demo.module.*;
import com.example.demo.servies.*;

@RestController
@RequestMapping("/cart")
public class ProductController {
    @Autowired
	ProductService productService;
    
    @GetMapping(path="/findall")
    public List<Product> findalls() {
    	
    	return productService.findalls();
    }
    @PostMapping(path="/saveone", consumes=MediaType.APPLICATION_JSON_VALUE)
    public Product saveProduct(@RequestBody Product product) {
    
    	    return productService.saveoneProduct(product);
    }
    
    @GetMapping(path="/page")
    public Map<String, Object> getallpageInfor(@RequestParam(name="Pagenum", defaultValue="0") int Pagenum,
    		@RequestParam(name="pagesize", defaultValue="2") int pagesize,
    		@RequestParam(name="sortBy", defaultValue="id") String sortBy) {
    	
    	  return productService.getallProductsInPage(Pagenum, pagesize, sortBy);
    	
    }
    @GetMapping(path="/find/{id}")
    public Product findoneByid(@PathVariable("id") final String id) {
           if (productService.existsofProductbyId(id)) {
    	  return productService.findProductById(id);
           }else {
        	   
        	   return new Product(null, null, 0);
           }
    }
    @DeleteMapping(path="/delete/{id}")
    public String deleteProductById(@PathVariable("id") final String id) {
    	 if(productService.existsofProductbyId(id)) {
    		 return productService.deleteById(id);
    	 }else {
    		 return "the Product is not existed";
    	 }
    }
    
    @PutMapping(path="/updated", consumes=MediaType.APPLICATION_JSON_VALUE)
    public Product updatedProduct(@RequestBody Product product) {
    
    	     return productService.updatedProduct(product);
    }
}
